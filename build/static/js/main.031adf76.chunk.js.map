{"version":3,"sources":["reportWebVitals.js","Components/Table Content/TD.js","Components/Table Content/TR.js","Components/Post Content/Post.js","Components/Table Content/PostHeader.js","Components/Table Content/PaginationButtons.js","Components/Table Content/ThePagination.js","Components/UI/Title.js","Components/UI/Loader.js","Components/Forms/FormGroup.js","utility/index.js","Components/UI/TheModal.js","Components/Post Content/Posts.js","Store/Action/auth.js","Components/TopNavbar.js","Screens/Home.js","Components/Forms/Form.js","Screens/Login.js","Screens/Register.js","Components/Comment Content/Comment.js","Components/Table Content/CommentsHeader.js","Store/Action/posts.js","Components/Comment Content/Comments.js","Screens/Dashboard.js","Components/Comment Content/WriteComment.js","Components/UI/TheCard.js","Components/Post Content/PostDetails.js","Screens/PostsPage.js","Router.js","Store/Reducer/auth.js","Store/Reducer/posts.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TD","children","props","className","TR","color","style","background","Post","id","title","description","onDelete","onEdit","useState","Liked","setLiked","to","onClick","PostHeader","PaginationButtons","num","ThePagination","postPerPage","totalPosts","paginate","increasePosts","decreasePosts","pageNumbers","i","Math","ceil","push","map","Title","helperText","Loader","class","FormGroupe","htmlFor","isAuthenticated","undefined","window","localStorage","getItem","JSON","parse","console","log","getRandomBetween","f","t","floor","random","TheModal","ShowHide","onCloseModal","onSubmit","userId","body","PostTitle","setPostTitle","PostBody","setPostBody","useEffect","Modal","show","onHide","Header","Body","e","type","placeholder","value","onChange","target","required","Posts","ShowModal","setShowHide","setPosts","Loading","setLoading","currentPage","setCurrentPage","setPostPerPage","indexOfLastPost","firstPost","CurrentPosts","slice","posts","useSelector","state","a","post","filter","p","fun","length","inc","dec","res","preventDefault","NewPosts","REGISTER","LOGIN","LOGOUT","FETCH_USER","saveToLocal","email","setItem","registerUser","dispatch","location","href","fetchUser","TopNavbar","useDispatch","IsAuthentic","setIsAuthentic","clear","Home","isAuth","Form","userType","setEmail","password","setPassword","onSubmitHandler","display","alignItems","justifyContent","height","textAlign","minLength","maxLength","min","max","Login","val","Register","Comment","postId","name","CommentsHeader","FETCH_POSTS","SET_POSTS","SET_COMMENTS","fetchComment","fetch","response","ok","Error","json","resData","comments","Comments","TheComments","setTheComments","currentPosts","auth","postsArray","myCommentsOnly","c","includes","Dashboard","setShowModal","WriteComment","onCommentsSubmit","setComments","CurrentName","setCurrentName","CurrentBody","setCurrentBody","Email","newComment","newArray","alert","cm","TheCard","width","PostDetails","setPost","MyPost","MyComments","currentComments","cc","newComments","oldComments","newComments2","concat","PostsPage","URL","searchParams","get","PostId","Router","myPosts","IsAuth","setIsAuth","path","exact","render","initialState","myComments","composeEnhancers","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.031adf76.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nexport default function TD({ children, ...props }) {\r\n  return (\r\n    <td\r\n      {...props}\r\n      // style={{ border: \"1px solid #000\", padding: 3 }}\r\n      className=\"border p-2 text-center\"\r\n    >\r\n      {children}\r\n    </td>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TR({ children, color = \"#aaa\" }) {\r\n  return (\r\n    <tr\r\n      style={{\r\n        background: color,\r\n      }}\r\n    >\r\n      {children}\r\n    </tr>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TD from \"../Table Content/TD\";\r\nimport TR from \"../Table Content/TR\";\r\n\r\nexport default function Post({ id, title, description, onDelete, onEdit }) {\r\n  const [Liked, setLiked] = useState(false);\r\n  return (\r\n    <Fragment>\r\n      <TR color=\"#eee\">\r\n        <TD>\r\n          <Link to={`/post?id=${+id}`}>{id}</Link>\r\n        </TD>\r\n        <TD>{title}</TD>\r\n        <TD>{description}</TD>\r\n        <TD onClick={onEdit}>edit</TD>\r\n        <TD onClick={onDelete}>delete</TD>\r\n        <TD onClick={() => setLiked(!Liked)}>{Liked ? \"Unlike\" : \"Like\"}</TD>\r\n      </TR>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TD from \"./TD\";\r\nimport TR from \"./TR\";\r\n\r\nexport default function PostHeader() {\r\n  return (\r\n    <thead>\r\n      <TR>\r\n        <TD>Id</TD>\r\n        <TD>Title</TD>\r\n        <TD>Description</TD>\r\n        <TD>Action</TD>\r\n        <TD>Action</TD>\r\n        <TD>Action</TD>\r\n      </TR>\r\n    </thead>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PaginationButtons({ num, onClick }) {\r\n  return (\r\n    <li className=\"page-item \">\r\n      <button className=\"page-link bg-dark text-light\" onClick={onClick}>\r\n        {num}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PaginationButtons from \"./PaginationButtons\";\r\n\r\nexport const ThePagination = ({\r\n  postPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  increasePosts,\r\n  decreasePosts,\r\n}) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <button\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={() => {\r\n              increasePosts(3);\r\n            }}\r\n          >\r\n            +3\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={() => {\r\n              decreasePosts(3);\r\n            }}\r\n          >\r\n            -3\r\n          </button>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <ul className=\"pagination p-3 m-1 \">\r\n            {pageNumbers.map((num) => (\r\n              <PaginationButtons\r\n                num={num}\r\n                onClick={() => paginate(num)}\r\n                key={num}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function Title({ title, helperText, children }) {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid p-3\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">{title}</h1>\r\n        <p className=\"lead\">{helperText}</p>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./ring.css\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader() {\r\n  return <div class=\"lds-hourglass\"></div>;\r\n}\r\n","import React, { Fragment } from \"react\";\r\n\r\nexport default function FormGroupe({ title, children }) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <label htmlFor={title} className=\"label p-1\">\r\n            {title}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">{children}</div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","export const isAuthenticated = () => {\r\n  if (typeof window == undefined) {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"userId\")) {\r\n    const id = JSON.parse(localStorage.getItem(\"userId\"));\r\n    if (id > 0 && id < 11) {\r\n      console.log(id);\r\n      return id;\r\n    } else {\r\n      return false;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getRandomBetween = (f, t) =>\r\n  Math.floor(Math.random() * (t - f) + f);\r\n\r\nexport const cvs_fetch = async (url) => {\r\n  let data = await fetch(url);\r\n  data = await data.json();\r\n  return data;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormGroupe from \"../Forms/FormGroup\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { getRandomBetween } from \"../../utility\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nexport default function TheModal({\r\n  ShowHide,\r\n  onCloseModal,\r\n  onSubmit,\r\n  title = \"\",\r\n  userId,\r\n  body = \"\",\r\n}) {\r\n  const [PostTitle, setPostTitle] = useState(\"\");\r\n  const [PostBody, setPostBody] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!!title && !!body) {\r\n      setPostTitle(title);\r\n      setPostBody(body);\r\n    }\r\n  }, [title, body]);\r\n  return (\r\n    <Modal show={ShowHide} onHide={onCloseModal}>\r\n      <Modal.Header>Make A Post</Modal.Header>\r\n      <Modal.Body>\r\n        <form\r\n          onSubmit={(e) => {\r\n            onSubmit(e, {\r\n              title: PostTitle,\r\n              body: PostBody,\r\n              id: getRandomBetween(500, 1000),\r\n              userId: userId,\r\n            });\r\n            setPostBody(\"\");\r\n            setPostTitle(\"\");\r\n          }}\r\n        >\r\n          <FormGroupe title=\"Title\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              value={PostTitle}\r\n              onChange={(e) => setPostTitle(e.target.value)}\r\n              id=\"Title\"\r\n            />\r\n          </FormGroupe>\r\n          <FormGroupe title=\"Body\">\r\n            <input\r\n              required\r\n              id=\"Body\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Body\"\r\n              value={PostBody}\r\n              onChange={(e) => setPostBody(e.target.value)}\r\n            />\r\n          </FormGroupe>\r\n          <FormGroupe title=\"Body\">\r\n            <input\r\n              required\r\n              className=\"btn btn-primary btn-block\"\r\n              type=\"submit\"\r\n              value=\"Post\"\r\n            />\r\n          </FormGroupe>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post\";\r\nimport PostHeader from \"../Table Content/PostHeader\";\r\nimport { ThePagination } from \"../Table Content/ThePagination\";\r\nimport Title from \"../UI/Title\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loader from \"../UI/Loader\";\r\n\r\nimport TheModal from \"../UI/TheModal\";\r\n\r\nexport default function Posts({\r\n  ShowModal = false,\r\n  onCloseModal,\r\n  userId = null,\r\n  title = \"Posts\",\r\n}) {\r\n  const [ShowHide, setShowHide] = useState(false);\r\n  // const [ShowHide2, setShowHide2] = useState(false);\r\n  const [Posts, setPosts] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postPerPage, setPostPerPage] = useState(5);\r\n  const [PostTitle] = useState(\"\");\r\n  const [PostBody] = useState(\"\");\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const firstPost = indexOfLastPost - postPerPage;\r\n  const CurrentPosts = Posts.slice(firstPost, indexOfLastPost);\r\n  // const [CurrentPosts, setCurrentPosts] = useState(Posts.slice(firstPost, indexOfLastPost);)\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  useEffect(() => {\r\n    setShowHide(ShowModal);\r\n    setLoading(true);\r\n    const fun = async () => {\r\n      if (!!userId) {\r\n        let post = posts.filter((p) => p.userId === +userId);\r\n        setPosts(post);\r\n        setLoading(false);\r\n      } else {\r\n        setPosts(posts);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fun();\r\n  }, [posts, ShowHide, ShowModal, userId]);\r\n  if (Loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Title title={title} />\r\n      <table className={!userId ? \"m-3\" : \"\"}>\r\n        <PostHeader />\r\n        <tbody>\r\n          {CurrentPosts.map((post) => {\r\n            return (\r\n              <>\r\n                <Post\r\n                  // key={post.id}\r\n                  key={post.id}\r\n                  onEdit={() => {\r\n                    // setPostBody(post.body);\r\n                    // setPostTitle(post.title);\r\n                    // setShowHide2(true);\r\n                  }}\r\n                  description={post.body}\r\n                  id={post.id}\r\n                  title={post.title}\r\n                  onDelete={() => {\r\n                    // setCurrentPosts()\r\n                    setPosts(() => Posts.filter((p) => p.id !== post.id));\r\n                  }}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <ThePagination\r\n        postPerPage={postPerPage}\r\n        totalPosts={Posts.length}\r\n        paginate={(num) => {\r\n          setCurrentPage(num);\r\n        }}\r\n        increasePosts={(inc) => setPostPerPage(postPerPage + +inc)}\r\n        decreasePosts={(dec) => setPostPerPage(postPerPage - +dec)}\r\n      />\r\n      <TheModal\r\n        ShowHide={ShowHide}\r\n        onCloseModal={onCloseModal}\r\n        userId={userId}\r\n        onSubmit={(e, res) => {\r\n          e.preventDefault();\r\n          let NewPosts = Posts;\r\n          console.log(\"OLD\", NewPosts);\r\n          NewPosts.push({\r\n            title: res.title,\r\n            body: res.body,\r\n            id: res.id,\r\n            userId: res.userId,\r\n          });\r\n          console.log(\"NEW\", {\r\n            title: res.title,\r\n            body: res.body,\r\n            id: res.id,\r\n            userId: res.userId,\r\n          });\r\n          setPosts(NewPosts);\r\n          onCloseModal();\r\n          setShowHide(false);\r\n        }}\r\n        body={PostBody}\r\n        title={PostTitle}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { isAuthenticated } from \"../../utility\";\r\n\r\nexport const REGISTER = \"REGISTER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const FETCH_USER = \"FETCH_USER\";\r\n\r\nconst saveToLocal = (email, id) => {\r\n  localStorage.setItem(\"email\", email);\r\n  localStorage.setItem(\"userId\", id);\r\n};\r\n\r\nexport const registerUser = ({ email }) => {\r\n  return (dispatch) => {\r\n    const id = Math.floor(Math.random() * 10) + 1;\r\n    saveToLocal(email, id);\r\n    console.log(email, id);\r\n    window.location.href = \"/dashboard\";\r\n    return dispatch({ type: REGISTER, email, userId: id });\r\n  };\r\n};\r\n\r\nexport const logInUser = ({ email }) => {\r\n  return (dispatch) => {\r\n    const id = Math.floor(Math.random() * 10) + 1;\r\n    saveToLocal(email, id);\r\n    window.location.href = \"/dashboard\";\r\n    return dispatch({ type: REGISTER, email, userId: id });\r\n  };\r\n};\r\nexport const fetchUser = () => {\r\n  return (dispatch) => {\r\n    if (!!isAuthenticated()) {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      const email = localStorage.getItem(\"email\");\r\n      dispatch({ type: FETCH_USER, userId, email });\r\n      return;\r\n    } else {\r\n      return dispatch({ type: FETCH_USER, userId: null, email: null });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { logout } from \"../Store/Action/auth\";\r\nimport { isAuthenticated } from \"../utility\";\r\n\r\nexport default function TopNavbar() {\r\n  const dispatch = useDispatch();\r\n  const [IsAuthentic, setIsAuthentic] = useState(false);\r\n  useEffect(() => {\r\n    setIsAuthentic(isAuthenticated());\r\n  }, []);\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark nav-fill shadow\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        <b>Home</b>\r\n      </Link>\r\n      {!IsAuthentic ? (\r\n        <Fragment>\r\n          <NavLink className=\"navbar-text m-1\" to=\"/register\">\r\n            Register\r\n          </NavLink>\r\n          <NavLink className=\"navbar-text m-1\" to=\"/login\">\r\n            Login\r\n          </NavLink>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <NavLink className=\"navbar-text\" to=\"/dashboard\">\r\n            Dashboard\r\n          </NavLink>\r\n          <button\r\n            onClick={() => {\r\n              localStorage.clear();\r\n              dispatch(logout());\r\n              window.location.href = \"/\";\r\n            }}\r\n            className=\"btn btn-danger mx-3\"\r\n            to=\"/dashboard\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Posts from \"../Components/Post Content/Posts\";\r\nimport TopNavbar from \"../Components/TopNavbar\";\r\n\r\nexport default function Home({ isAuth }) {\r\n  return (\r\n    <div>\r\n      <TopNavbar isAuth={isAuth} />\r\n      <Posts title=\"My Posts\" userId={null} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport FormGroup from \"./FormGroup\";\r\n\r\nexport default function Form({ onSubmit, title, userType }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!!email && !!password) {\r\n      onSubmit({ email, password });\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"80vh\",\r\n      }}\r\n    >\r\n      <form\r\n        className=\"shadow p-4 bg-dark text-light rounded\"\r\n        onSubmit={(e) => onSubmitHandler(e)}\r\n      >\r\n        <h3 className=\"py-3\" style={{ textAlign: \"center\" }}>\r\n          {title}\r\n        </h3>\r\n        <FormGroup title=\"Email\">\r\n          <input\r\n            id=\"Email\"\r\n            type=\"email\"\r\n            minLength={8}\r\n            maxLength={32}\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            placeholder=\"Email\"\r\n            required\r\n            className=\"form-control\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup title=\"Password\">\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"Password\"\r\n            required\r\n            min={6}\r\n            max={32}\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n            placeholder=\"Password\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <input\r\n            className=\"btn btn-primary p-2 my-2 btn-block form-control\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          />\r\n        </FormGroup>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Form from \"../Components/Forms/Form\";\r\nimport TopNavbar from \"../Components/TopNavbar\";\r\nimport { registerUser } from \"../Store/Action/auth\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Fragment>\r\n      <TopNavbar />\r\n      <Form\r\n        title=\"Login\"\r\n        onSubmit={(val) => {\r\n          dispatch(registerUser(val));\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Form from \"../Components/Forms/Form\";\r\nimport TopNavbar from \"../Components/TopNavbar\";\r\nimport { registerUser } from \"../Store/Action/auth\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Fragment>\r\n      <TopNavbar />\r\n      <Form\r\n        title=\"Register\"\r\n        onSubmit={(val) => {\r\n          dispatch(registerUser(val));\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TD from \"../Table Content/TD\";\r\nimport TR from \"../Table Content/TR\";\r\n\r\nexport default function Comment({ postId, name, body, email, id, onDelete }) {\r\n  return (\r\n    <TR color=\"#eee\">\r\n      <TD>{id}</TD>\r\n      <TD>{postId}</TD>\r\n      <TD>{email}</TD>\r\n      <TD>{name}</TD>\r\n      <TD>{body}</TD>\r\n      <TD onClick={onDelete}>Delete</TD>\r\n    </TR>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TD from \"./TD\";\r\nimport TR from \"./TR\";\r\nexport default function CommentsHeader() {\r\n  return (\r\n    <thead className=\"thead-dark\">\r\n      <TR>\r\n        <TD>Id</TD>\r\n        <TD>Post Id</TD>\r\n        <TD>Email</TD>\r\n        <TD>Title</TD>\r\n        <TD>Description</TD>\r\n        <TD>Action</TD>\r\n      </TR>\r\n    </thead>\r\n  );\r\n}\r\n","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const FETCH_POSTS_START = \"FETCH_POSTS_START\";\r\nexport const FETCH_POSTS_FAIL = \"FETCH_POSTS_FAIL\";\r\n\r\nexport const FETCH_COMMENTS = \"FETCH_COMMENTS\";\r\nexport const SET_COMMENTS = \"SET_COMMENTS\";\r\nexport const FETCH_COMMENTS_START = \"FETCH_COMMENTS_START\";\r\nexport const FETCH_COMMENTS_FAIL = \"FETCH_COMMENTS_FAIL\";\r\n\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const id = localStorage.getItem(\"userId\");\r\n      const resData = await response.json();\r\n      console.log(id);\r\n      console.log(\r\n        resData.filter((post) => {\r\n          return post.userId === id;\r\n        })\r\n      );\r\n      dispatch({\r\n        type: SET_POSTS,\r\n        posts: resData,\r\n        myPosts: resData.filter((post) => {\r\n          return post.userId === id;\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\nexport const fetchComment = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const resData = await response.json();\r\n      dispatch({\r\n        type: SET_COMMENTS,\r\n        comments: resData,\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Comment from \"./Comment\";\r\nimport CommentsHeader from \"../Table Content/CommentsHeader\";\r\nimport { ThePagination } from \"../Table Content/ThePagination\";\r\nimport Title from \"../UI/Title\";\r\nimport { fetchComment } from \"../../Store/Action/posts\";\r\nimport Loader from \"../UI/Loader\";\r\n\r\nexport default function Comments({ title = \"Comments\" }) {\r\n  const dispatch = useDispatch();\r\n  const [TheComments, setTheComments] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postPerPage, setPostPerPage] = useState(5);\r\n\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const firstPost = indexOfLastPost - postPerPage;\r\n  const currentPosts = TheComments.slice(firstPost, indexOfLastPost);\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const comments = useSelector((state) => state.posts.comments);\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  dispatch(fetchComment());\r\n  useEffect(() => {\r\n    console.log(userId);\r\n    let postsArray = posts.filter((p) => +p.userId === +userId);\r\n    postsArray = postsArray.map((p) => p.id);\r\n    let myCommentsOnly = comments.filter((c) => postsArray.includes(+c.postId));\r\n    setTheComments(myCommentsOnly);\r\n    console.log(myCommentsOnly);\r\n    setLoading(false);\r\n  }, [dispatch, posts]);\r\n  if (Loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Title title={title} />\r\n      <div>\r\n        <table className=\"table\">\r\n          <CommentsHeader />\r\n          <tbody>\r\n            {currentPosts.map(({ body, email, name, postId, id }) => {\r\n              return (\r\n                <Comment\r\n                  body={body}\r\n                  email={email}\r\n                  name={name}\r\n                  postId={postId}\r\n                  key={id}\r\n                  id={id}\r\n                  onDelete={() => {\r\n                    setTheComments(() =>\r\n                      TheComments.filter((p) => {\r\n                        return p.id !== id;\r\n                      })\r\n                    );\r\n                    // alert(\"Deleted Successfully\");\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ThePagination\r\n        postPerPage={postPerPage}\r\n        totalPosts={TheComments.length}\r\n        paginate={(num) => {\r\n          setCurrentPage(num);\r\n        }}\r\n        increasePosts={(inc) => setPostPerPage(postPerPage + +inc)}\r\n        decreasePosts={(dec) => setPostPerPage(postPerPage - +dec)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Comments from \"../Components/Comment Content/Comments\";\r\nimport Posts from \"../Components/Post Content/Posts\";\r\nimport TopNavbar from \"../Components/TopNavbar\";\r\nimport Title from \"../Components/UI/Title\";\r\n\r\nexport default function Dashboard() {\r\n  const [ShowModal, setShowModal] = useState(false);\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  return (\r\n    <div>\r\n      <TopNavbar />\r\n      <Title title=\"Dashboard\">\r\n        <button\r\n          onClick={() => {\r\n            console.log(\"click\");\r\n            setShowModal(true);\r\n          }}\r\n          className=\"btn btn-primary m-1\"\r\n        >\r\n          Create Post\r\n        </button>\r\n      </Title>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-5\">\r\n            <Posts\r\n              title=\"My Posts\"\r\n              userId={userId}\r\n              ShowModal={ShowModal}\r\n              onCloseModal={() => {\r\n                setShowModal(false);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <Comments title=\"Comments On Your Posts\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getRandomBetween } from \"../../utility\";\r\nimport FormGroup from \"../Forms/FormGroup\";\r\nimport Comment from \"./Comment\";\r\nimport CommentsHeader from \"../Table Content/CommentsHeader\";\r\nimport Title from \"../UI/Title\";\r\n\r\nexport default function WriteComment({ postId, onCommentsSubmit }) {\r\n  const [Comments, setComments] = useState([]);\r\n  const [CurrentName, setCurrentName] = useState(\"\");\r\n  const [CurrentBody, setCurrentBody] = useState(\"\");\r\n  const [Email] = useState(useSelector((state) => state.auth.email));\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    onCommentsSubmit(Comments);\r\n    setComments([]);\r\n  };\r\n  const oneMoreHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!CurrentBody && !CurrentName) {\r\n      alert(\"FIll Both Fields\");\r\n      return;\r\n    }\r\n    let newComment = {\r\n      postId,\r\n      id: getRandomBetween(501, 1000),\r\n      name: CurrentName,\r\n      body: CurrentBody,\r\n      email: Email,\r\n    };\r\n    let newArray = Comments;\r\n    newArray.push(newComment);\r\n    setComments(newArray);\r\n    setCurrentBody(\"\");\r\n    setCurrentName(\"\");\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <form className=\"shadow p-3 mb-5 mx-3\" onSubmit={onSubmitHandler}>\r\n            <Title title=\"Enter Comments\" />\r\n            <FormGroup title=\"Title\">\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"Title\"\r\n                type=\"text\"\r\n                onChange={(e) => setCurrentName(e.target.value)}\r\n                placeholder=\"Title\"\r\n                value={CurrentName}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup title=\"Body\">\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"Body\"\r\n                placeholder=\"Body\"\r\n                type=\"text\"\r\n                onChange={(e) => setCurrentBody(e.target.value)}\r\n                value={CurrentBody}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <button\r\n                className=\"btn btn-primary m-1 btn-block\"\r\n                onClick={oneMoreHandler}\r\n              >\r\n                One More +\r\n              </button>\r\n              <input\r\n                className=\"btn btn-success btn-block m-1\"\r\n                value=\"Comment\"\r\n                type=\"submit\"\r\n              />\r\n            </FormGroup>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-7\">\r\n          {!!Comments.length && (\r\n            <table>\r\n              <CommentsHeader />\r\n              {Comments.map((c) => (\r\n                <Comment\r\n                  body={c.body}\r\n                  email={c.email}\r\n                  id={c.id}\r\n                  name={c.name}\r\n                  onDelete={() =>\r\n                    setComments(Comments.filter((cm) => cm.id !== c.id))\r\n                  }\r\n                  postId={c.postId}\r\n                />\r\n              ))}\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Title from \"./Title\";\r\n\r\nexport default function TheCard({ title, body }) {\r\n  return (\r\n    <div className=\"card m-2 p-3 shadow\" style={{ width: \"90%\" }}>\r\n      <Title title=\"Post\" helperText=\"Do Comment and share\" />\r\n      <h5 className=\"card-title\">{title}</h5>\r\n      <p className=\"card-text\">{body}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Comment from \"../Comment Content/Comment\";\r\nimport CommentsHeader from \"../Table Content/CommentsHeader\";\r\nimport { ThePagination } from \"../Table Content/ThePagination\";\r\nimport WriteComment from \"../Comment Content/WriteComment\";\r\nimport TheCard from \"../UI/TheCard\";\r\nimport { fetchComment } from \"../../Store/Action/posts\";\r\nimport { fetchUser } from \"../../Store/Action/auth\";\r\nimport Loader from \"../UI/Loader\";\r\n\r\nexport default function PostDetails({ id }) {\r\n  const dispatch = useDispatch();\r\n  const [Post, setPost] = useState({});\r\n  const [Comments, setComments] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  const { posts, comments } = useSelector((state) => state.posts);\r\n  dispatch(fetchComment());\r\n  dispatch(fetchUser());\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const MyPost =\r\n      posts &&\r\n      posts.filter((p) => {\r\n        return p.id === +id;\r\n      });\r\n    setPost(MyPost[0]);\r\n    const MyComments = comments.filter((c) => {\r\n      return c.postId === +id;\r\n    });\r\n    setComments(MyComments);\r\n    setLoading(false);\r\n  }, [dispatch, posts]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postPerPage, setPostPerPage] = useState(5);\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const firstPost = indexOfLastPost - postPerPage;\r\n  const currentComments = Comments.slice(firstPost, indexOfLastPost);\r\n  if (Loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutters align-items-center\">\r\n          <div className=\"col-3\">\r\n            {!!Post && <TheCard body={Post.body} title={Post.title} />}\r\n          </div>\r\n          <div className=\"col-9\">\r\n            {!!Comments.length ? (\r\n              <table className=\"m-2\">\r\n                <CommentsHeader />\r\n                <tbody>\r\n                  {currentComments.map((cc) => (\r\n                    <Comment\r\n                      body={cc.body}\r\n                      email={cc.email}\r\n                      name={cc.name}\r\n                      postId={cc.postId}\r\n                      key={cc.id}\r\n                      id={cc.id}\r\n                      onDelete={() => {\r\n                        setComments(() =>\r\n                          Comments.filter((c) => c.id !== cc.id)\r\n                        );\r\n                        // alert(\"Deleted Successfully\");\r\n                      }}\r\n                    />\r\n                  ))}\r\n                  <ThePagination\r\n                    postPerPage={postPerPage}\r\n                    totalPosts={Comments.length}\r\n                    paginate={(num) => {\r\n                      setCurrentPage(num);\r\n                    }}\r\n                    increasePosts={(inc) => setPostPerPage(postPerPage + +inc)}\r\n                    decreasePosts={(dec) => setPostPerPage(postPerPage - +dec)}\r\n                  />\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <h1 className=\"text-center p-1 bg-dark text-light\">\r\n                No Comments To Show\r\n              </h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <WriteComment\r\n        postId={id}\r\n        onCommentsSubmit={(newComments) => {\r\n          let oldComments = Comments;\r\n          console.log(oldComments);\r\n          let newComments2 = oldComments.concat(newComments);\r\n          console.log(newComments2);\r\n          setComments(newComments2);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PostDetails from \"../Components/Post Content/PostDetails\";\r\nimport TopNavbar from \"../Components/TopNavbar\";\r\n\r\nexport default function PostsPage() {\r\n  const [PostId] = useState(\r\n    new URL(window.location.href).searchParams.get(\"id\")\r\n  );\r\n  return (\r\n    <div>\r\n      <TopNavbar />\r\n      <PostDetails id={+PostId} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Screens/Home\";\r\nimport Login from \"./Screens/Login\";\r\nimport Register from \"./Screens/Register\";\r\nimport { isAuthenticated } from \"./utility\";\r\nimport Dashboard from \"./Screens/Dashboard\";\r\nimport PostsPage from \"./Screens/PostsPage\";\r\nimport { fetchUser } from \"./Store/Action/auth\";\r\nimport { fetchPosts } from \"./Store/Action/posts\";\r\nimport { useDispatch } from \"react-redux\";\r\nexport default function Router() {\r\n  const dispatch = useDispatch();\r\n  dispatch(fetchUser());\r\n  dispatch(fetchPosts());\r\n  const [IsAuth, setIsAuth] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const verifyAuth = () => {\r\n      setIsAuth(!!isAuthenticated());\r\n    };\r\n    verifyAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact render={() => <Home isAuth={IsAuth} />} />\r\n\r\n        <Route\r\n          path=\"/register\"\r\n          render={() =>\r\n            !IsAuth ? (\r\n              <Register />\r\n            ) : (\r\n              <h1>\r\n                <Link to=\"/dashboard\"> Access Denied </Link>\r\n              </h1>\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          render={() =>\r\n            !IsAuth ? (\r\n              <Login />\r\n            ) : (\r\n              <h1>\r\n                <Link to=\"/dashboard\"> Access Denied </Link>\r\n              </h1>\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/dashboard\"\r\n          render={() =>\r\n            IsAuth ? (\r\n              <Dashboard />\r\n            ) : (\r\n              <h1>\r\n                <Link to=\"/login\"> Access Denied Login First </Link>\r\n              </h1>\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/post\"\r\n          render={() =>\r\n            IsAuth ? (\r\n              <PostsPage />\r\n            ) : (\r\n              <h1>\r\n                <Link to=\"/login\"> Access Denied Login First </Link>\r\n              </h1>\r\n            )\r\n          }\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { FETCH_USER, LOGIN, LOGOUT, REGISTER } from \"../Action/auth\";\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  email: null,\r\n  isAuth: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTER:\r\n      return {\r\n        userId: action.userId,\r\n        email: action.email,\r\n        isAuth: !!action.userId,\r\n      };\r\n    case LOGIN:\r\n      return {\r\n        userId: action.userId,\r\n        email: action.email,\r\n        isAuth: !!action.userId,\r\n      };\r\n    case LOGOUT:\r\n      return initialState;\r\n    case FETCH_USER:\r\n      console.log(\"here in store\", action);\r\n      return {\r\n        userId: action.userId,\r\n        email: action.email,\r\n        isAuth: !!action.userId,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_POSTS, SET_COMMENTS, SET_POSTS } from \"../Action/posts\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  comments: [],\r\n  myPosts: [],\r\n  myComments: [],\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_POSTS:\r\n      return { ...state, posts: action.posts };\r\n    case SET_POSTS:\r\n      return { ...state, posts: action.posts, myPosts: action.myPosts };\r\n    case SET_COMMENTS:\r\n      return { ...state, comments: action.comments };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Router from \"./Router\";\nimport authReducer from \"./Store/Reducer/auth\";\nimport postReducer from \"./Store/Reducer/posts\";\n\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  posts: postReducer,\n});\n// const store = createStore(rootReducer, applyMiddleware(ReduxThunk));\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(ReduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}